theme_minimal() +  # Style propre et lisible
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Titre centré et en gras
axis.title = element_text(size = 12),  # Taille des titres des axes
axis.text = element_text(size = 12),  # Taille des textes des axes
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19, fill = "white") +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
# Exclure les deux dates et   mettre la variable qualitative jour en supplementaire pour l'ACP
acp_complète <- PCA(df %>% select(-date_debut,-date_debut_standard),
quali.sup = 24,scale.unit = TRUE,graph=F)
plot.PCA(acp_complète)
fviz_pca_var(acp_complète, col.var = "contrib", repel = TRUE)
# ACP avec une seule variable de pluie
acp_reduite_pluie <- PCA(df %>% select(-date_debut, -date_debut_standard, -pluie_3h, -pluie_1h, -pluie_12h, -pluie_24h,-pluie_cumul_0h,-pluie_intensite,-pluie_intensite_max_1h),
quali.sup = 17, # Variables supplémentaires
scale.unit = TRUE, graph = F)
plot.PCA(acp_reduite_pluie)
fviz_pca_var(acp_reduite_pluie, col.var = "contrib", repel = TRUE)
# Sélectionner les variables actives pour l'ACP
df_reduit <- df %>%
select(O3, PM10, temperature_max, vent_moyen, pression, pluie_intensite)
# Sélectionner les variables supplémentaires
var_suppl <- df %>%
select(NO,NO2)
# Identifier les indices des variables supplémentaires
quanti_sup_indices <- which(names(df) %in% colnames(var_suppl))
# Réaliser l'ACP
acp_reduite <- PCA( df_reduit, scale.unit = TRUE, quanti.sup = quanti_sup_indices,  graph = F)
plot.PCA(acp_reduite)
fviz_pca_var(acp_reduite, col.var = "contrib", repel = TRUE)
# Extraction des moments critiques à partir des résultats ACP (résultats simulés)
ind_coords <- as.data.frame(acp_complète$ind$coord)
critical_ind <- ind_coords %>% filter(Dim.1 > 3 | Dim.2 > 3)
# Caractérisation des moments critiques
critical_periods <- df %>% filter(row.names(df) %in% row.names(critical_ind))
critical_summary <- critical_periods %>%
summarise(across(c(NO2, NO, O3, PM10, temperature, humidite, vent_moyen), mean))
html_table2 <- htmlTable::htmlTable(critical_summary,caption = "Tableau statistique")
html_table2
# Distribution des niveaux de pollution pour les périodes critiques
critical_periods %>%
ggplot(aes(x=temperature, y=O3)) +
geom_point(alpha=0.5, color="red") +
geom_smooth(method="lm", color="blue") +
theme_minimal() +
ggtitle("Niveaux de pollution durant les périodes critiques")
library(tidyr)
library(dplyr)
library(ggplot2)
library(lubridate) # pour la gestion des format date
library(MASS)
library(FactoMineR)
library(corrplot)
library(factoextra)
library(plotly)
# manipulation pour les données manquantes
library(naniar)
# si on veut faire de l'ACP en dynamique, ie explorer et voir directement le rendu
library(Factoshiny)
load("ATMO-RDSM.rda")
glimpse(df)
print(miss_var_summary(df), n=35)
df$PM2.5 <- NULL
print(miss_var_summary(df), n=35)
df <- df %>% na.omit()
print(miss_var_summary(df), n=35)
df <-df %>% mutate(jour=wday(date_debut,label=TRUE,abbr=FALSE))
df <- df %>% mutate(heure=hour(date_debut))
rownames.df <- paste(df$date_debut %>% day(),
df$date_debut %>% month(),
df$date_debut %>% hour(), sep=".")
# Calcul de la matrice de corrélation pour les variables quantitatives
quant_vars <- df %>% select(where(is.numeric))
Matrix<-round(cor(quant_vars),3) #fonction round pour arrondir à 3 décimales
# Matrice en HTML simple
html_table <- htmlTable::htmlTable(Matrix, caption = "Matrice de corrélation des variables quantitatives")
html_table
# Graphiques pertinents
ggplot(df, aes(x = temperature, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre la température et l'ozone", x = "Température", y = "Ozone")
# Graphiques pertinents
ggplot(df, aes(x = humidite, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre l'humidité et l'ozone", x = "Humidité", y = "Ozone")
ggplot(df, aes(x = NO, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre NO et l'ozone", x = "NO", y = "Ozone")
# Graphique des boîtes à moustaches de l'ozone par heure
ggplot(df, aes(x = factor(heure), y = O3,)) +  # Couleurs par heure
geom_boxplot(outlier.color = "darkred", outlier.shape = 19) +  # Points aberrants en rouge
labs(
title = "Distribution de l'ozone par heure (Boîtes à moustaches)",
x = "Heure de la journée",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style propre et lisible
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Titre centré et en gras
axis.title = element_text(size = 12),  # Taille des titres des axes
axis.text = element_text(size = 12),  # Taille des textes des axes
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19, fill = "white") +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
# Exclure les deux dates et   mettre la variable qualitative jour en supplementaire pour l'ACP
acp_complète <- PCA(df %>% select(-date_debut,-date_debut_standard),
quali.sup = 24,scale.unit = TRUE,graph=F)
plot.PCA(acp_complète)
fviz_pca_var(acp_complète, col.var = "contrib", repel = TRUE)
# ACP avec une seule variable de pluie
acp_reduite_pluie <- PCA(df %>% select(-date_debut, -date_debut_standard, -pluie_3h, -pluie_1h, -pluie_12h, -pluie_24h,-pluie_cumul_0h,-pluie_intensite,-pluie_intensite_max_1h),
quali.sup = 17, # Variables supplémentaires
scale.unit = TRUE, graph = F)
plot.PCA(acp_reduite_pluie)
fviz_pca_var(acp_reduite_pluie, col.var = "contrib", repel = TRUE)
# Sélectionner les variables actives pour l'ACP
df_reduit <- df %>%
select(O3, PM10, temperature_max, vent_moyen, pression, pluie_intensite)
# Sélectionner les variables supplémentaires
var_suppl <- df %>%
select(NO,NO2)
# Identifier les indices des variables supplémentaires
quanti_sup_indices <- which(names(df) %in% colnames(var_suppl))
# Réaliser l'ACP
acp_reduite <- PCA( df_reduit, scale.unit = TRUE, quanti.sup = quanti_sup_indices,  graph = F)
plot.PCA(acp_reduite)
fviz_pca_var(acp_reduite, col.var = "contrib", repel = TRUE)
# Extraction des moments critiques à partir des résultats ACP (résultats simulés)
ind_coords <- as.data.frame(acp_complète$ind$coord)
critical_ind <- ind_coords %>% filter(Dim.1 > 3 | Dim.2 > 3)
# Caractérisation des moments critiques
critical_periods <- df %>% filter(row.names(df) %in% row.names(critical_ind))
critical_summary <- critical_periods %>%
summarise(across(c(NO2, NO, O3, PM10, temperature, humidite, vent_moyen), mean))
html_table2 <- htmlTable::htmlTable(critical_summary,caption = "Tableau statistique")
html_table2
# Distribution des niveaux de pollution pour les périodes critiques
critical_periods %>%
ggplot(aes(x=temperature, y=O3)) +
geom_point(alpha=0.5, color="red") +
geom_smooth(method="lm", color="blue") +
theme_minimal() +
ggtitle("Niveaux de pollution durant les périodes critiques")
load("ATMO-RDSM.rda")
glimpse(df)
glimpse(df)
print(miss_var_summary(df), n=35)
df$PM2.5 <- NULL
print(miss_var_summary(df), n=35)
df <- df %>% na.omit()
print(miss_var_summary(df), n=35)
df <-df %>% mutate(jour=wday(date_debut,label=TRUE,abbr=FALSE))
df <- df %>% mutate(heure=hour(date_debut))
rownames.df <- paste(df$date_debut %>% day(),
df$date_debut %>% month(),
df$date_debut %>% hour(), sep=".")
library(tidyr)
library(dplyr)
library(ggplot2)
library(lubridate) # pour la gestion des format date
library(MASS)
library(FactoMineR)
library(corrplot)
library(factoextra)
library(plotly)
# manipulation pour les données manquantes
library(naniar)
# si on veut faire de l'ACP en dynamique, ie explorer et voir directement le rendu
library(Factoshiny)
load("ATMO-RDSM.rda")
glimpse(df)
print(miss_var_summary(df), n=35)
df$PM2.5 <- NULL
print(miss_var_summary(df), n=35)
df <- df %>% na.omit()
print(miss_var_summary(df), n=35)
df <-df %>% mutate(jour=wday(date_debut,label=TRUE,abbr=FALSE))
df <- df %>% mutate(heure=hour(date_debut))
rownames.df <- paste(df$date_debut %>% day(),
df$date_debut %>% month(),
df$date_debut %>% hour(), sep=".")
# Calcul de la matrice de corrélation pour les variables quantitatives
quant_vars <- df %>% select(where(is.numeric))
Matrix<-round(cor(quant_vars),3) #fonction round pour arrondir à 3 décimales
# Matrice en HTML simple
html_table <- htmlTable::htmlTable(Matrix, caption = "Matrice de corrélation des variables quantitatives")
html_table
# Graphiques pertinents
ggplot(df, aes(x = temperature, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre la température et l'ozone", x = "Température", y = "Ozone")
# Graphiques pertinents
ggplot(df, aes(x = humidite, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre l'humidité et l'ozone", x = "Humidité", y = "Ozone")
ggplot(df, aes(x = NO, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre NO et l'ozone", x = "NO", y = "Ozone")
# Graphique des boîtes à moustaches de l'ozone par heure
ggplot(df, aes(x = factor(heure), y = O3,)) +  # Couleurs par heure
geom_boxplot(outlier.color = "darkred", outlier.shape = 19) +  # Points aberrants en rouge
labs(
title = "Distribution de l'ozone par heure (Boîtes à moustaches)",
x = "Heure de la journée",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style propre et lisible
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Titre centré et en gras
axis.title = element_text(size = 12),  # Taille des titres des axes
axis.text = element_text(size = 12),  # Taille des textes des axes
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19, fill = "white") +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
# Exclure les deux dates et   mettre la variable qualitative jour en supplementaire pour l'ACP
acp_complète <- PCA(df %>% select(-date_debut,-date_debut_standard),
quali.sup = 24,scale.unit = TRUE,graph=F)
plot.PCA(acp_complète)
fviz_pca_var(acp_complète, col.var = "contrib", repel = TRUE)
# ACP avec une seule variable de pluie
acp_reduite_pluie <- PCA(df %>% select(-date_debut, -date_debut_standard, -pluie_3h, -pluie_1h, -pluie_12h, -pluie_24h,-pluie_cumul_0h,-pluie_intensite,-pluie_intensite_max_1h),
quali.sup = 17, # Variables supplémentaires
scale.unit = TRUE, graph = F)
plot.PCA(acp_reduite_pluie)
fviz_pca_var(acp_reduite_pluie, col.var = "contrib", repel = TRUE)
# Sélectionner les variables actives pour l'ACP
df_reduit <- df %>%
select(O3, PM10, temperature_max, vent_moyen, pression, pluie_intensite)
# Sélectionner les variables supplémentaires
var_suppl <- df %>%
select(NO,NO2)
# Identifier les indices des variables supplémentaires
quanti_sup_indices <- which(names(df) %in% colnames(var_suppl))
# Réaliser l'ACP
acp_reduite <- PCA( df_reduit, scale.unit = TRUE, quanti.sup = quanti_sup_indices,  graph = F)
plot.PCA(acp_reduite)
fviz_pca_var(acp_reduite, col.var = "contrib", repel = TRUE)
# Extraction des moments critiques à partir des résultats ACP (résultats simulés)
ind_coords <- as.data.frame(acp_complète$ind$coord)
critical_ind <- ind_coords %>% filter(Dim.1 > 3 | Dim.2 > 3)
# Caractérisation des moments critiques
critical_periods <- df %>% filter(row.names(df) %in% row.names(critical_ind))
critical_summary <- critical_periods %>%
summarise(across(c(NO2, NO, O3, PM10, temperature, humidite, vent_moyen), mean))
html_table2 <- htmlTable::htmlTable(critical_summary,caption = "Tableau statistique")
html_table2
# Distribution des niveaux de pollution pour les périodes critiques
critical_periods %>%
ggplot(aes(x=temperature, y=O3)) +
geom_point(alpha=0.5, color="red") +
geom_smooth(method="lm", color="blue") +
theme_minimal() +
ggtitle("Niveaux de pollution durant les périodes critiques")
library(tidyr)
library(dplyr)
library(ggplot2)
library(lubridate) # pour la gestion des format date
library(MASS)
library(FactoMineR)
library(corrplot)
library(factoextra)
library(plotly)
# manipulation pour les données manquantes
library(naniar)
# si on veut faire de l'ACP en dynamique, ie explorer et voir directement le rendu
library(Factoshiny)
load("ATMO-RDSM.rda")
glimpse(df)
print(miss_var_summary(df), n=35)
df$PM2.5 <- NULL
print(miss_var_summary(df), n=35)
df <- df %>% na.omit()
print(miss_var_summary(df), n=35)
df <-df %>% mutate(jour=wday(date_debut,label=TRUE,abbr=FALSE))
df <- df %>% mutate(heure=hour(date_debut))
rownames.df <- paste(df$date_debut %>% day(),
df$date_debut %>% month(),
df$date_debut %>% hour(), sep=".")
# Calcul de la matrice de corrélation pour les variables quantitatives
quant_vars <- df %>% select(where(is.numeric))
Matrix<-round(cor(quant_vars),3) #fonction round pour arrondir à 3 décimales
# Matrice en HTML simple
html_table <- htmlTable::htmlTable(Matrix, caption = "Matrice de corrélation des variables quantitatives")
html_table
# Graphiques pertinents
ggplot(df, aes(x = temperature, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre la température et l'ozone", x = "Température", y = "Ozone")
# Graphiques pertinents
ggplot(df, aes(x = humidite, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre l'humidité et l'ozone", x = "Humidité", y = "Ozone")
ggplot(df, aes(x = NO, y = O3)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation entre NO et l'ozone", x = "NO", y = "Ozone")
# Graphique des boîtes à moustaches de l'ozone par heure
ggplot(df, aes(x = factor(heure), y = O3,)) +  # Couleurs par heure
geom_boxplot(outlier.color = "darkred", outlier.shape = 19) +  # Points aberrants en rouge
labs(
title = "Distribution de l'ozone par heure (Boîtes à moustaches)",
x = "Heure de la journée",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style propre et lisible
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Titre centré et en gras
axis.title = element_text(size = 12),  # Taille des titres des axes
axis.text = element_text(size = 12),  # Taille des textes des axes
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19, fill = "white") +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
# Exclure les deux dates et   mettre la variable qualitative jour en supplementaire pour l'ACP
acp_complète <- PCA(df %>% select(-date_debut,-date_debut_standard),
quali.sup = 24,scale.unit = TRUE,graph=F)
plot.PCA(acp_complète)
fviz_pca_var(acp_complète, col.var = "contrib", repel = TRUE)
# ACP avec une seule variable de pluie
acp_reduite_pluie <- PCA(df %>% select(-date_debut, -date_debut_standard, -pluie_3h, -pluie_1h, -pluie_12h, -pluie_24h,-pluie_cumul_0h,-pluie_intensite,-pluie_intensite_max_1h),
quali.sup = 17, # Variables supplémentaires
scale.unit = TRUE, graph = F)
plot.PCA(acp_reduite_pluie)
fviz_pca_var(acp_reduite_pluie, col.var = "contrib", repel = TRUE)
# Sélectionner les variables actives pour l'ACP
df_reduit <- df %>%
select(O3, PM10, temperature_max, vent_moyen, pression, pluie_intensite)
# Sélectionner les variables supplémentaires
var_suppl <- df %>%
select(NO,NO2)
# Identifier les indices des variables supplémentaires
quanti_sup_indices <- which(names(df) %in% colnames(var_suppl))
# Réaliser l'ACP
acp_reduite <- PCA( df_reduit, scale.unit = TRUE, quanti.sup = quanti_sup_indices,  graph = F)
plot.PCA(acp_reduite)
fviz_pca_var(acp_reduite, col.var = "contrib", repel = TRUE)
# Extraction des moments critiques à partir des résultats ACP (résultats simulés)
ind_coords <- as.data.frame(acp_complète$ind$coord)
critical_ind <- ind_coords %>% filter(Dim.1 > 3 | Dim.2 > 3)
# Caractérisation des moments critiques
critical_periods <- df %>% filter(row.names(df) %in% row.names(critical_ind))
critical_summary <- critical_periods %>%
summarise(across(c(NO2, NO, O3, PM10, temperature, humidite, vent_moyen), mean))
html_table2 <- htmlTable::htmlTable(critical_summary,caption = "Tableau statistique")
html_table2
# Distribution des niveaux de pollution pour les périodes critiques
critical_periods %>%
ggplot(aes(x=temperature, y=O3)) +
geom_point(alpha=0.5, color="red") +
geom_smooth(method="lm", color="blue") +
theme_minimal() +
ggtitle("Niveaux de pollution durant les périodes critiques")
# Graphique des boîtes à moustaches de l'ozone par heure
ggplot(df, aes(x = factor(heure), y = O3,fill=inversion)) +  # Couleurs par heure
geom_boxplot(outlier.color = "darkred", outlier.shape = 19) +  # Points aberrants en rouge
labs(
title = "Distribution de l'ozone par heure (Boîtes à moustaches)",
x = "Heure de la journée",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style propre et lisible
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Titre centré et en gras
axis.title = element_text(size = 12),  # Taille des titres des axes
axis.text = element_text(size = 12),  # Taille des textes des axes
)
ggplot(df, aes(x = inversion, y = O3, fill = inversion)) +
geom_boxplot() +
labs(title = "Distribution des niveaux d'O3 par inversion thermique",
x = "Inversion thermique",
y = "Concentration d'O3") +
 theme_minimal()
# Graphique des boîtes à moustaches de l'ozone par heure
ggplot(df, aes(x = factor(heure), y = O3, fill=heure)) +  # Couleurs par heure
geom_boxplot(outlier.color = "darkred", outlier.shape = 19) +  # Points aberrants en rouge
labs(
title = "Distribution de l'ozone par heure (Boîtes à moustaches)",
x = "Heure de la journée",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style propre et lisible
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Titre centré et en gras
axis.title = element_text(size = 12),  # Taille des titres des axes
axis.text = element_text(size = 12),  # Taille des textes des axes
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19, fill = jour) +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3,fill=jour)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19, fill = "white") +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3,fill=jour)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19, fill = "blue") +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3,fill=jour)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19, fill = "grey") +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
# Graphique des boîtes à moustaches de l'ozone par jour de la semaine
ggplot(df, aes(x = jour, y = O3,fill= jour)) +
geom_boxplot(outlier.color = "black", outlier.shape = 19) +  # Points aberrants en noir, boîtes blanches
labs(
title = "Distribution de l'ozone par jour de la semaine (Boîtes à moustaches)",
x = "Jour de la semaine",
y = "Concentration d'Ozone (µg/m³)"
) +
theme_minimal() +  # Style minimaliste
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
)
